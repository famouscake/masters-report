%!PS-Adobe-3.0
%%Creator: cairo 1.14.10 (http://cairographics.org)
%%CreationDate: Sat Aug 19 17:09:56 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: A4 595 842 0 () ()
%%BoundingBox: 0 304 369 791
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: A4
%%PageBoundingBox: 0 304 369 791
596 842 cairo_set_page_size
%%EndPageSetup
q 0 304 369 487 rectclip q
0.141176 0.121569 0.109804 rg
87.742 333.194 m 87.742 317.577 75.086 304.921 59.469 304.921 c 43.855 
304.921 31.199 317.577 31.199 333.194 c 31.199 348.808 43.855 361.468 59.469
 361.468 c 75.086 361.468 87.742 348.808 87.742 333.194 c h
87.742 333.194 m f
1 0 0 rg
368.129 761.901 m 368.129 746.288 355.473 733.632 339.859 733.632 c 324.242
 733.632 311.586 746.288 311.586 761.901 c 311.586 777.519 324.242 790.175
 339.859 790.175 c 355.473 790.175 368.129 777.519 368.129 761.901 c h
368.129 761.901 m f
0.141176 0.121569 0.109804 rg
86.754 602.913 m 86.754 587.3 74.098 574.644 58.48 574.644 c 42.867 574.644
 30.211 587.3 30.211 602.913 c 30.211 618.53 42.867 631.187 58.48 631.187
 c 74.098 631.187 86.754 618.53 86.754 602.913 c h
86.754 602.913 m f
187.477 603.511 m 187.477 587.898 174.82 575.237 159.203 575.237 c 143.59
 575.237 130.934 587.898 130.934 603.511 c 130.934 619.128 143.59 631.784
 159.203 631.784 c 174.82 631.784 187.477 619.128 187.477 603.511 c h
187.477 603.511 m f
0 g
3.6 w
0 J
0 j
[ 7.2 3.6] 0 d
4 M q 1 0 0 -1 0 841.889771 cm
81.387 238.746 m 134.695 238.746 l S Q
1 0 0.00392157 rg
4.886506 w
[] 0.0 d
q 1 0 0 -1 0 841.889771 cm
180.367 220.188 m 319.738 99.043 l S Q
0 0.784314 0 rg
5.669291 w
q 1 0 0 -1 0 841.889771 cm
57.43 266.625 m 59.281 481.484 l S Q
q 1 0 0 -1 0 841.889771 cm
45.121 215.207 m -30.82 104.004 l S Q
Q Q
showpage
%%Trailer
%%EOF
